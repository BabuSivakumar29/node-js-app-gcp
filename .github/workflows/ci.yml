name: CI Pipeline

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  lint-test:
    runs-on: ubuntu-latest
    steps:
      # Checkout repo
      - name: Checkout repo
        uses: actions/checkout@v3

      # Set up Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      # Install dependencies
      - name: Install dependencies
        working-directory: app
        run: npm install

      # Run ESLint
      - name: Run ESLint
        working-directory: app
        run: npm run lint

      # Run unit tests with in-memory DB
      - name: Run unit tests
        working-directory: app
        run: NODE_ENV=test npm test

      # Run vulenerability check
      - name: Security scan (npm audit)
        working-directory: app
        run: npm audit --audit-level=moderate

  docker-build-scan:
    runs-on: ubuntu-latest
    needs: lint-test
    steps:
      - uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build Docker image
        run: docker build --no-cache -t node-app:${{ github.sha }} .

      - name: Scan Docker image with Trivy
        uses: aquasecurity/trivy-action@master
        env:
          TRIVY_DISABLE_VEX_NOTICE: true
        with:
          image-ref: node-app:${{ github.sha }}
          format: table
          exit-code: 1
          severity: CRITICAL

  terraform-check:
    runs-on: ubuntu-latest
    permissions:
      id-token: write  # Required for OIDC
      contents: read
    needs: lint-test
    steps:
      #Checkout repo
      - name: Checkout repo
        uses: actions/checkout@v3

      # Install Terraform
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.0

      #Initialize Terraform modules
      - name: Terraform init
        working-directory: infra
        run: terraform init

      # erraform fmt check
      - name: Terraform fmt check
        working-directory: infra
        run: terraform fmt -check

      #Terraform validate
      - name: Terraform validate
        working-directory: infra
        run: terraform validate

      #Terraform lint with tflint
      - name: Terraform lint (tflint)
        working-directory: infra
        run: tflint
