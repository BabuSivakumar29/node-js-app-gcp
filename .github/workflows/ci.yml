name: CI Pipeline

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  lint-test:
    runs-on: ubuntu-latest
    env:
      NODE_VERSION: 20
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Install dependencies
        working-directory: app
        run: npm install

      - name: Run ESLint
        working-directory: app
        run: npm run lint

      - name: Run unit tests
        working-directory: app
        run: NODE_ENV=test npm test

      - name: Security scan (npm audit)
        working-directory: app
        run: npm audit --audit-level=moderate

  docker-build-scan:
    runs-on: ubuntu-latest
    needs: lint-test
    env:
      DOCKER_IMAGE_NAME: node-app
    steps:
      - uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build Docker image
        run: docker build --no-cache -t ${{ env.DOCKER_IMAGE_NAME }}:${{ github.sha }} .

      - name: Scan Docker image with Trivy
        uses: aquasecurity/trivy-action@master
        env:
          TRIVY_DISABLE_VEX_NOTICE: true
        with:
          image-ref: ${{ env.DOCKER_IMAGE_NAME }}:${{ github.sha }}
          format: table
          exit-code: 1
          severity: CRITICAL

  terraform-check:
    runs-on: ubuntu-latest
    needs: docker-build-scan
    permissions:
      id-token: write
      contents: read
    env:
      TF_WORKSPACE: default
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.0

      - name: Authenticate to GCP via OIDC
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ secrets.WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ secrets.GCP_SA_EMAIL }}

      - name: Terraform init
        working-directory: infra
        run: terraform init

      - name: Terraform fmt check
        working-directory: infra
        run: terraform fmt -check

      - name: Terraform validate
        working-directory: infra
        run: terraform validate

      - name: Install tflint
        run: |
          curl -s https://raw.githubusercontent.com/terraform-linters/tflint/master/install_linux.sh | bash
          tflint --version

      - name: Terraform lint (tflint)
        working-directory: infra
        run: tflint

      - name: Terraform Providers Lock
        working-directory: infra
        run: terraform providers lock

      - name: Terraform plan
        working-directory: infra
        run: terraform plan -out=tfplan

      - name: Upload plan artifact
        uses: actions/upload-artifact@v4
        with:
          name: plan-file
          path: infra/
