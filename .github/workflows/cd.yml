name: CD Pipeline

on:
  workflow_run:
    workflows: ["CI Pipeline"]
    types:
      - completed

jobs:
  deploy-cloud-run:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    env:
      DOCKER_IMAGE_NAME: node-app
      CLOUD_RUN_SERVICE: node-js-app
      CLOUD_RUN_REGION: us-east1
      GCP_PROJECT: ${{ secrets.GCP_PROJECT }}
      TF_WORKSPACE: default   # Ensure same workspace as CI
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Authenticate to GCP via OIDC
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ secrets.WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ secrets.GCP_SA_EMAIL }}

      - name: Download Terraform plan artifact
        uses: actions/download-artifact@v4
        with:
          name: plan-file
          path: infra
          repository: BabuSivakumar29/node-js-app-gcp
          run-id: ${{ github.event.workflow_run.id }}
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.0

      - name: Terraform init
        working-directory: infra
        run: terraform init

      - name: Apply Terraform plan
        working-directory: infra
        run: terraform apply -input=false tfplan

      - name: Configure Docker for Artifact Registry
        run: gcloud auth configure-docker ${GCP_PROJECT}.pkg.dev --quiet

      - name: Build Docker image
        run: |
          docker build -t ${GCP_PROJECT}.pkg.dev/${GCP_PROJECT}/nodejs-app/${DOCKER_IMAGE_NAME}:${GITHUB_SHA} .

      - name: Push Docker image to Artifact Registry
        run: |
          docker push ${GCP_PROJECT}.pkg.dev/${GCP_PROJECT}/nodejs-app/${DOCKER_IMAGE_NAME}:${GITHUB_SHA}

      - name: Deploy to Cloud Run
        run: |
          gcloud run deploy ${CLOUD_RUN_SERVICE} \
            --image ${GCP_PROJECT}.pkg.dev/${GCP_PROJECT}/nodejs-app/${DOCKER_IMAGE_NAME}:${GITHUB_SHA} \
            --region ${CLOUD_RUN_REGION} \
            --platform managed \
            --allow-unauthenticated
